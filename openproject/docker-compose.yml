# Security-focused shared configurations
x-security-defaults: &security_defaults
  security_opt:
    - no-new-privileges:true
  cap_drop:
    - ALL
  cap_add:
    - CHOWN
    - SETGID
    - SETUID

# Default resource limits (can be overridden per service)
x-resource-limits: &resource_limits
  deploy:
    resources:
      reservations:
        memory: ${DEFAULT_MEMORY_RESERVATION:-256M}
      limits:
        memory: ${DEFAULT_MEMORY_LIMIT:-2G}
        cpus: '${DEFAULT_CPUS_LIMIT:-1.0}'

x-logging: &logging
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"

x-restart-policy: &restart_policy
  restart: unless-stopped

x-monitoring-labels: &monitoring_labels
  labels:
    - "prometheus.enable=true"
    - "prometheus.port=8080"
    - "environment=${ENVIRONMENT:-production}"

# Common OpenProject Environment Variables
x-openproject-base-env: &openproject_base_env
  # Database
  DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}?pool=20&encoding=unicode&reconnect=true"
  # Redis
  OPENPROJECT_CACHE__REDIS__URL: redis://:${REDIS_PASSWORD}@redis:6379
  # Application Core
  OPENPROJECT_SECRET_KEY_BASE: ${OPENPROJECT_SECRET_KEY_BASE}
  OPENPROJECT_HOST_NAME: ${OPENPROJECT_HOST_NAME}
  OPENPROJECT_HTTPS: "${OPENPROJECT_HTTPS:-true}"
  # Security Headers (Cloudflare Tunnel handles HTTPS)
  OPENPROJECT_SECURITY__FORCE__HTTPS: "${OPENPROJECT_SECURITY__FORCE__HTTPS:-false}"
  OPENPROJECT_SECURITY__HSTS: "${OPENPROJECT_SECURITY__HSTS:-false}"
  # Email Configuration
  OPENPROJECT_EMAIL__DELIVERY__METHOD: ${OPENPROJECT_EMAIL__DELIVERY__METHOD:-smtp}
  OPENPROJECT_SMTP__ADDRESS: ${OPENPROJECT_SMTP__ADDRESS}
  OPENPROJECT_SMTP__PORT: ${OPENPROJECT_SMTP__PORT:-587}
  OPENPROJECT_SMTP__DOMAIN: ${OPENPROJECT_SMTP__DOMAIN}
  OPENPROJECT_SMTP__USER__NAME: ${OPENPROJECT_SMTP__USER__NAME}
  OPENPROJECT_SMTP__PASSWORD: ${OPENPROJECT_SMTP__PASSWORD}
  OPENPROJECT_SMTP__ENABLE__STARTTLS__AUTO: ${OPENPROJECT_SMTP__ENABLE__STARTTLS__AUTO:-true}
  OPENPROJECT_SMTP__AUTHENTICATION: ${OPENPROJECT_SMTP__AUTHENTICATION:-login}
  # Logging
  RAILS_LOG_LEVEL: ${RAILS_LOG_LEVEL:-info}

services:
  # PostgreSQL Database
  db:
    image: postgres:${POSTGRES_VERSION:-13-alpine}
    <<: [*restart_policy, *logging, *security_defaults]
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - /opt/openproject_data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - backend
    deploy:
      resources:
        limits:
          memory: ${DB_MEMORY_LIMIT:-2G}
        reservations:
          memory: ${DB_MEMORY_RESERVATION:-512M}

  # Redis Cache
  redis:
    image: redis:${REDIS_VERSION:-7-alpine}
    <<: [*restart_policy, *logging, *security_defaults]
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --appendonly yes
      --maxmemory ${REDIS_MAXMEMORY:-512mb}
      --maxmemory-policy allkeys-lru
    volumes:
      - /opt/openproject_data/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - backend
    deploy:
      resources:
        limits:
          memory: ${REDIS_MEMORY_LIMIT:-1G}
        reservations:
          memory: ${REDIS_MEMORY_RESERVATION:-256M}

  # OpenProject Web Application
  web:
    image: openproject/openproject:${OPENPROJECT_VERSION:-16}
    <<: [*restart_policy, *logging, *security_defaults]
    ports:
      - "${PORT:-8080}:8080"
    environment:
      <<: *openproject_base_env
      # Performance settings
      OPENPROJECT_WEB__WORKERS: ${OPENPROJECT_WEB__WORKERS:-4}
      OPENPROJECT_WEB__TIMEOUT: ${OPENPROJECT_WEB__TIMEOUT:-120}
    volumes:
      - /opt/openproject_data/assets:/var/openproject/assets
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health_checks/default"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 120s
    networks:
      - backend
    deploy:
      resources:
        limits:
          memory: ${WEB_MEMORY_LIMIT:-3G}
        reservations:
          memory: ${WEB_MEMORY_RESERVATION:-1G}

  # OpenProject Background Worker
  worker:
    image: openproject/openproject:${OPENPROJECT_VERSION:-16}
    <<: [*restart_policy, *logging, *security_defaults]
    command: "./docker/prod/worker"
    environment:
      <<: *openproject_base_env
      OPENPROJECT_WORKER__CONCURRENCY: ${OPENPROJECT_WORKER__CONCURRENCY:-10}
    volumes:
      - /opt/openproject_data/assets:/var/openproject/assets
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend
    deploy:
      replicas: ${WORKER_REPLICAS:-1}
      resources:
        limits:
          memory: ${WORKER_MEMORY_LIMIT:-2G}
        reservations:
          memory: ${WORKER_MEMORY_RESERVATION:-512M}

# Network segmentation for security
networks:
  backend:
    driver: bridge
    internal: true
  monitoring:
    driver: bridge
    internal: true

# Persistent volumes with backup labels
volumes:
  # postgres_data:  # REMOVE or comment out
  #   driver: local
  #   labels:
  #     backup: "true"
  #     retention: "30d"
  # redis_data: # REMOVE or comment out
  #   driver: local
  #   labels:
  #     backup: "true" # Redis data can be backed up, though often treated as cache
  #     retention: "7d"
  # openproject_assets: # REMOVE or comment out
  #   driver: local
  #   labels:
  #     backup: "true"
  #     retention: "30d"
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
  openproject_logs: # Volume for OpenProject logs, shared with Promtail/Caddy
    driver: local
  backup_logs: # Volume for backup script logs
    driver: local
